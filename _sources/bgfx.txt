bgfx - API Reference
====================

bgfx is Cross-platform, graphics API agnostic, "Bring Your Own Engine/Framework" style
rendering library.

https://github.com/bkaradzic/bgfx

General
-------

Initialization and Shutdown
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::init

.. doxygendefine:: BGFX_PCI_ID_NONE
.. doxygendefine:: BGFX_PCI_ID_SOFTWARE_RASTERIZER
.. doxygendefine:: BGFX_PCI_ID_AMD
.. doxygendefine:: BGFX_PCI_ID_INTEL
.. doxygendefine:: BGFX_PCI_ID_NVIDIA

.. doxygenstruct:: bgfx::CallbackI
    :members:

.. doxygenfunction:: bgfx::shutdown

Updating
~~~~~~~~

Reset
*****

.. doxygenfunction:: bgfx::reset

.. doxygendefine:: BGFX_RESET_NONE
.. doxygendefine:: BGFX_RESET_FULLSCREEN
.. doxygendefine:: BGFX_RESET_MSAA_X2
.. doxygendefine:: BGFX_RESET_MSAA_X4
.. doxygendefine:: BGFX_RESET_MSAA_X8
.. doxygendefine:: BGFX_RESET_MSAA_X16
.. doxygendefine:: BGFX_RESET_VSYNC
.. doxygendefine:: BGFX_RESET_MAXANISOTROPY
.. doxygendefine:: BGFX_RESET_CAPTURE
.. doxygendefine:: BGFX_RESET_HMD
.. doxygendefine:: BGFX_RESET_HMD_DEBUG
.. doxygendefine:: BGFX_RESET_HMD_RECENTER
.. doxygendefine:: BGFX_RESET_FLUSH_AFTER_RENDER
.. doxygendefine:: BGFX_RESET_FLIP_AFTER_RENDER
.. doxygendefine:: BGFX_RESET_SRGB_BACKBUFFER

Frame
*****

.. doxygenfunction:: bgfx::frame

Debug
~~~~~

Debug Features
**************

.. doxygenfunction:: bgfx::setDebug

Debug Flags
***********

.. doxygendefine:: BGFX_DEBUG_NONE
.. doxygendefine:: BGFX_DEBUG_WIREFRAME
.. doxygendefine:: BGFX_DEBUG_IFH
.. doxygendefine:: BGFX_DEBUG_STATS
.. doxygendefine:: BGFX_DEBUG_TEXT

Debug Text Display
******************

.. doxygenfunction:: bgfx::dbgTextClear
.. doxygenfunction:: bgfx::dbgTextPrintf

Querying information
~~~~~~~~~~~~~~~~~~~~

Renderer
********

.. doxygenfunction:: bgfx::getRendererType

.. doxygenstruct:: bgfx::RendererType
    :members:

Capabilities
************

.. doxygenfunction:: bgfx::getCaps

.. doxygenstruct:: bgfx::Caps
    :members:

.. doxygendefine:: BGFX_CAPS_TEXTURE_COMPARE_LEQUAL
.. doxygendefine:: BGFX_CAPS_TEXTURE_COMPARE_ALL
.. doxygendefine:: BGFX_CAPS_TEXTURE_3D
.. doxygendefine:: BGFX_CAPS_VERTEX_ATTRIB_HALF
.. doxygendefine:: BGFX_CAPS_INSTANCING
.. doxygendefine:: BGFX_CAPS_RENDERER_MULTITHREADED
.. doxygendefine:: BGFX_CAPS_FRAGMENT_DEPTH
.. doxygendefine:: BGFX_CAPS_BLEND_INDEPENDENT
.. doxygendefine:: BGFX_CAPS_COMPUTE
.. doxygendefine:: BGFX_CAPS_FRAGMENT_ORDERING
.. doxygendefine:: BGFX_CAPS_SWAP_CHAIN
.. doxygendefine:: BGFX_CAPS_HMD
.. doxygendefine:: BGFX_CAPS_INDEX32
.. doxygendefine:: BGFX_CAPS_DRAW_INDIRECT

Statistics
**********

.. doxygenfunction:: bgfx::getStats

.. doxygenstruct:: bgfx::Stats
    :members:

Head Mounted Display
********************

.. doxygenfunction:: bgfx::getHMD

.. doxygenstruct:: bgfx::HMD
    :members:

.. doxygendefine:: BGFX_HMD_NONE
.. doxygendefine:: BGFX_HMD_DEVICE_RESOLUTION
.. doxygendefine:: BGFX_HMD_RENDERING

Platform specific
~~~~~~~~~~~~~~~~~

These are platform specific APIs. It is only necessary to use these APIs in conjunction with
creating windows.

.. doxygenfunction:: bgfx::renderFrame

.. doxygenstruct:: bgfx::RenderFrame
    :members:

.. doxygenfunction:: bgfx::setPlatformData

.. doxygenstruct:: bgfx::PlatformData
    :members:

Miscellaneous
~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::discard
.. doxygenfunction:: bgfx::touch
.. doxygenfunction:: bgfx::setClearColor(uint8_t, uint32_t)
.. doxygenfunction:: bgfx::setClearColor(uint8_t, const float)
.. doxygenfunction:: bgfx::setClearColor(uint8_t, float, float, float, float)
.. doxygenfunction:: bgfx::saveScreenShot

Views
-----

.. doxygenfunction:: bgfx::setViewName
.. doxygenfunction:: bgfx::setViewRect
.. doxygenfunction:: bgfx::setViewScissor
.. doxygenfunction:: bgfx::setViewClear(uint8_t, uint16_t, uint32_t, float, uint8_t)
.. doxygenfunction:: bgfx::setViewClear(uint8_t, uint16_t, float, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t)
.. doxygenfunction:: bgfx::setViewSeq
.. doxygenfunction:: bgfx::setViewTransform
.. doxygenfunction:: bgfx::setViewRemap


.. doxygenfunction:: bgfx::setViewFrameBuffer

Draw
----

Draw state is not preserved between two draw calls. All state is cleared after calling
`bgfx::submit`.

State
~~~~~

Debug
*****

.. doxygenfunction:: bgfx::setMarker

State
*****

.. doxygenfunction:: bgfx::setState

State Flags
***********

.. doxygendefine:: BGFX_STATE_RGB_WRITE
.. doxygendefine:: BGFX_STATE_ALPHA_WRITE
.. doxygendefine:: BGFX_STATE_DEPTH_WRITE

.. doxygendefine:: BGFX_STATE_DEFAULT

Stencil
*******

.. doxygenfunction:: bgfx::setStencil

Stencil Flags
*************

.. doxygendefine:: BGFX_STENCIL_TEST_LESS

Scissor
*******

When scissor rectangle is changing per draw call inside the same view use `bgfx::setScissor`,
otherwise prefer `bgfx::setViewScissor`.

.. doxygenfunction:: bgfx::setScissor(uint16_t, uint16_t, uint16_t, uint16_t)
.. doxygenfunction:: bgfx::setScissor(uint16_t)

Transform
*********

.. doxygenfunction:: bgfx::allocTransform
.. doxygenfunction:: bgfx::setTransform(const void *, uint16_t)
.. doxygenfunction:: bgfx::setTransform(uint32_t, uint16_t)

Buffers
~~~~~~~

.. doxygenfunction:: bgfx::setIndexBuffer(IndexBufferHandle, uint32_t, uint32_t)
.. doxygenfunction:: bgfx::setIndexBuffer(DynamicIndexBufferHandle, uint32_t, uint32_t)
.. doxygenfunction:: bgfx::setIndexBuffer(const TransientIndexBuffer *, uint32_t, uint32_t)
.. doxygenfunction:: bgfx::setIndexBuffer(const TransientIndexBuffer *)

.. doxygenfunction:: bgfx::setVertexBuffer(VertexBufferHandle)
.. doxygenfunction:: bgfx::setVertexBuffer(VertexBufferHandle, uint32_t, uint32_t)
.. doxygenfunction:: bgfx::setVertexBuffer(DynamicVertexBufferHandle, uint32_t)
.. doxygenfunction:: bgfx::setVertexBuffer(const TransientVertexBuffer *)
.. doxygenfunction:: bgfx::setVertexBuffer(const TransientVertexBuffer *, uint32_t, uint32_t)

.. doxygenfunction:: bgfx::setInstanceDataBuffer(const InstanceDataBuffer *, uint32_t)
.. doxygenfunction:: bgfx::setInstanceDataBuffer(VertexBufferHandle, uint32_t, uint32_t)
.. doxygenfunction:: bgfx::setInstanceDataBuffer(DynamicVertexBufferHandle, uint32_t, uint32_t)

Textures
~~~~~~~~

.. doxygenfunction:: bgfx::setTexture(uint8_t, UniformHandle, TextureHandle, uint32_t)
.. doxygenfunction:: bgfx::setTexture(uint8_t, UniformHandle, FrameBufferHandle, uint8_t, uint32_t)

Submit
~~~~~~

.. doxygenfunction:: bgfx::submit(uint8_t, ProgramHandle, int32_t)
.. doxygenfunction:: bgfx::submit(uint8_t, ProgramHandle, IndirectBufferHandle, uint16_t, uint16_t, int32_t)

Compute
-------

Compute state is not preserved between two compute dispatches. All state is cleared after calling
`bgfx::dispatch`.

Buffers
~~~~~~~

.. doxygenfunction:: bgfx::setBuffer(uint8_t, IndexBufferHandle, Access::Enum)
.. doxygenfunction:: bgfx::setBuffer(uint8_t, VertexBufferHandle, Access::Enum)
.. doxygenfunction:: bgfx::setBuffer(uint8_t, DynamicIndexBufferHandle, Access::Enum)
.. doxygenfunction:: bgfx::setBuffer(uint8_t, DynamicVertexBufferHandle, Access::Enum)
.. doxygenfunction:: bgfx::setBuffer(uint8_t, IndirectBufferHandle, Access::Enum)

Images
~~~~~~

.. doxygenfunction:: bgfx::setImage(uint8_t, UniformHandle, TextureHandle, uint8_t, Access::Enum, TextureFormat::Enum)
.. doxygenfunction:: bgfx::setImage(uint8_t, UniformHandle, FrameBufferHandle, uint8_t, Access::Enum, TextureFormat::Enum)

Dispatch
~~~~~~~~

.. doxygenfunction:: bgfx::dispatch(uint8_t, ProgramHandle, uint16_t, uint16_t, uint16_t, uint8_t)
.. doxygenfunction:: bgfx::dispatch(uint8_t, ProgramHandle, IndirectBufferHandle, uint16_t, uint16_t, uint8_t)

Resources
---------

.. doxygenfunction:: bgfx::alloc
.. doxygenfunction:: bgfx::copy
.. doxygenfunction:: bgfx::makeRef

.. doxygenstruct:: bgfx::Memory
    :members:

Shaders and Programs
~~~~~~~~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::createShader
.. doxygenfunction:: bgfx::getShaderUniforms
.. doxygenfunction:: bgfx::destroyShader
.. doxygenfunction:: bgfx::createProgram(ShaderHandle, ShaderHandle, bool)
.. doxygenfunction:: bgfx::createProgram(ShaderHandle, bool)
.. doxygenfunction:: bgfx::destroyProgram

Uniforms
~~~~~~~~

.. doxygenfunction:: bgfx::createUniform
.. doxygenfunction:: bgfx::destroyUniform

.. doxygenstruct:: bgfx::UniformType
    :members:

Vertex Buffers
~~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::createVertexBuffer
.. doxygenfunction:: bgfx::destroyVertexBuffer

.. doxygenstruct:: bgfx::VertexDecl
    :members:

.. doxygenstruct:: bgfx::Attrib
    :members:

.. doxygenfunction:: bgfx::createDynamicVertexBuffer(uint32_t, const VertexDecl&, uint16_t)
.. doxygenfunction:: bgfx::createDynamicVertexBuffer(const Memory *, const VertexDecl&, uint16_t)
.. doxygenfunction:: bgfx::updateDynamicVertexBuffer(DynamicVertexBufferHandle, uint32_t, const Memory *)
.. doxygenfunction:: bgfx::destroyDynamicVertexBuffer(DynamicVertexBufferHandle)

.. doxygenfunction:: bgfx::checkAvailTransientVertexBuffer
.. doxygenfunction:: bgfx::allocTransientVertexBuffer

Index Buffers
~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::createIndexBuffer
.. doxygenfunction:: bgfx::destroyIndexBuffer
.. doxygenfunction:: bgfx::createDynamicIndexBuffer(uint32_t, uint16_t)
.. doxygenfunction:: bgfx::createDynamicIndexBuffer(const Memory *, uint16_t)
.. doxygenfunction:: bgfx::updateDynamicIndexBuffer(DynamicIndexBufferHandle, uint32_t, const Memory *)
.. doxygenfunction:: bgfx::destroyDynamicIndexBuffer(DynamicIndexBufferHandle)

.. doxygenfunction:: bgfx::checkAvailTransientIndexBuffer
.. doxygenfunction:: bgfx::allocTransientIndexBuffer

Textures
~~~~~~~~

.. doxygenfunction:: bgfx::calcTextureSize
.. doxygenfunction:: bgfx::createTexture
.. doxygenfunction:: bgfx::createTexture2D(uint16_t, uint16_t, uint8_t, TextureFormat::Enum, uint32_t, const Memory *)
.. doxygenfunction:: bgfx::createTexture2D(BackbufferRatio::Enum, uint8_t, TextureFormat::Enum, uint32_t)
.. doxygenfunction:: bgfx::updateTexture2D
.. doxygenfunction:: bgfx::createTexture3D
.. doxygenfunction:: bgfx::updateTexture3D
.. doxygenfunction:: bgfx::createTextureCube
.. doxygenfunction:: bgfx::updateTextureCube
.. doxygenfunction:: bgfx::destroyTexture

Frame Buffers
~~~~~~~~~~~~~

.. doxygenfunction:: createFrameBuffer(BackbufferRatio::Enum, TextureFormat::Enum, uint32_t)
.. doxygenfunction:: createFrameBuffer(uint8_t, TextureHandle *, bool)
.. doxygenfunction:: createFrameBuffer(void *, uint16_t, uint16_t, TextureFormat::Enum)
.. doxygenfunction:: destroyFrameBuffer

Instance Buffer
~~~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::checkAvailInstanceDataBuffer
.. doxygenfunction:: bgfx::allocInstanceDataBuffer

Indirect Buffer
~~~~~~~~~~~~~~~

.. doxygenfunction:: bgfx::createIndirectBuffer
.. doxygenfunction:: bgfx::destroyIndirectBuffer
